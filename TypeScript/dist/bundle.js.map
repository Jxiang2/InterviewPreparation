{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://typescript/./src/summary.ts","webpack://typescript/webpack/before-startup","webpack://typescript/webpack/startup","webpack://typescript/webpack/after-startup"],"sourcesContent":["// arrays\nlet characters: string[] = [];\ncharacters.push('hello');\ncharacters.push('world');\nconsole.log('characters: ', characters);\n\n\n// unions for multi-type variables\nlet mixed: (string | number)[] = [];\nmixed.push('hello');\nmixed.push(20);\nconsole.log('mixed:', mixed);\n\nlet uid: string | number;\nuid = 13;\nconsole.log(uid);\nuid = '12345';\nconsole.log(uid);\n\n// objects, the properties can not be changed once defined\nlet ninjaOne: {\n  name: string,\n  age: number,\n  belt: string;\n};\nninjaOne = {name: 'xjy', age: 22, belt: 'black'};\nconsole.log(ninjaOne);\n\n\n// functions & type aliases (the first two lines)\ntype StringOrNum = string | number;\ntype objWithNameUID = { name: string, uid: StringOrNum; };\ntype functionalType = (id: string, savings: BigInteger, checking: BigInteger) => boolean;\n\nlet greet: (user: objWithNameUID) => void;\nlet add: (a: number, b: number) => void;\nlet minus: (a: number, b: number) => number;\n\ngreet = (user: objWithNameUID): void => {\n  console.log(`${user.name} | ${user.uid}`);\n};\n\ngreet({name: 'xjy', uid: 1537572});\n\n\nadd = (a: number, b: number, c: number | string = 20): void => {\n  console.log(a + b + Number(c));\n};\n\nadd(5, 10);\n\nminus = (a: number, b: number): number => {\n  return a - b;\n};\n\nlet result = minus(10, 7);\nconsole.log(result);\n\n\n// interface: a blueprint\ninterface IsPerson {\n  name: string;\n  age: number;\n\n  speak(a: string): void;\n\n  spend(a: number): number;\n}\n\nconst me: IsPerson = {\n  name: 'xjy',\n  age: 30,\n  speak(text: string) {\n    console.log(text);\n  },\n  spend(amount: number) {\n    console.log('I spent', amount);\n    return amount;\n  }\n};\nconst greetperson = (person: IsPerson) => {\n  console.log('hello', person.name);\n};\n\ngreetperson(me);\n\n\n// generics\n// capture whatever item we pass in the function\n// I need to pass a object with a property called name\nconst addUID = <T extends { name: string; }>(obj: T) => {\n  let uid = Math.floor(Math.random() * 100);\n  return {...obj, uid};\n};\n\nlet docOne = addUID({name: 'yoshi', age: 40});\nconsole.log(docOne.age);\n\n\n// generics\n// specify the type of input when calling a generic function\nconst printAny = <T, U>(state: T, name: U) => {\n  console.log(state);\n};\n\nprintAny<string, string>(\"hello\", \"me\");\nprintAny<number, string>(1, \"me\");\n\n\n// generics\n// make an interface field flexible\n// the data property can be any data type\ninterface Resource<T> {\n  uid: number;\n  resourceName: string;\n  data: T;\n}\n\nconst docThree: Resource<String> = {\n  uid: 12345,\n  resourceName: 'person',\n  data: 'string data'\n};\n\nconst docFour: Resource<string[]> = {\n  uid: 12345,\n  resourceName: 'person',\n  data: ['string data 1', 'string data 2']\n};\n\nconsole.log(docThree);\nconsole.log(docFour);\n\n\n// extends & types example\ninterface Vector1D {\n  x: number;\n};\n\ninterface Vector2D {\n  x: number,\n  y: number;\n}\n\ntype subTypeOf<T, U> = T extends U ? true : false;\n\nconst var1: subTypeOf<Vector2D, Vector1D> = true;\nconst var2: subTypeOf<Vector1D, Vector1D> = true;\nconst var3: subTypeOf<Vector1D, Vector2D> = false;\n\n\n// dynamic interfaces/ objects\ninterface IDynamicObj {\n  [index: string]: number;\n}\n\nconst id1: IDynamicObj = {\n  k1: 1,\n  k2: 2,\n  k3: 5,\n  helloWord: 15\n};\nconsole.log(id1);\n\ninterface IOptionalObj {\n  id: string,\n  birthDate: Date;\n  avatar?: string;\n  tropies: string[];\n};\nconst optionalObj: IOptionalObj = {\n  id: \"3d2ce32\",\n  birthDate: new Date(Date.now()),\n  tropies: []\n};\nconsole.log(optionalObj);\n\n\n// as keyword\ninterface newInterface {\n  name: string;\n  age: number;\n}\n\nlet hello: newInterface;\nhello = {} as newInterface;\nhello.age = 12;\nhello.name = \"hello\";\nconsole.log(hello);\n\n\n// enums : 0, 1, ,2, 3, 4\nenum ResourceType { BOOK, AUTHOR, FILM, DIRECTOR, PERSON }\n\nconsole.log(ResourceType.AUTHOR);\n\n\n// & operator on 2 interfaces\ninterface Base1 {\n  name: string;\n  age: number;\n}\n\ninterface Base2 {\n  id: string,\n  isMarried: boolean;\n}\n\nconst mixedBase: Base1 & Base2 = {\n  id: \"3r23f0jewfewf\",\n  name: \"xjy\",\n  age: 12,\n  isMarried: false\n};\n\nconsole.log(mixedBase);\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/summary.ts\"]();\n",""],"names":[],"sourceRoot":""}